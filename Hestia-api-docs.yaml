openapi: 3.0.1
info:
  title: Hestia API
  description: API REST para la gesti√≥n completa de un negocio de alojamientos
  contact:
    name: Alexis Chapal
    url: https://github.com/Damir-Alexis-Chapal/Lodging-House
    email: dchapalimbaquin2018@gmail.com
  license:
    name: GNU GPL-3.0 License
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Servidor de Desarrollo
tags:
- name: Accommodations
  description: Operations related to hostings management
- name: Auth
  description: Operations related to user authentication and sessions
- name: Bookings
  description: Operations related to booking management
- name: Passwords
  description: Operations related to passwords management
- name: Reviews
  description: Operations related to reviews management
- name: Users
  description: Operations related to users management
paths:
  /api/v1/users/{id}:
    get:
      tags:
      - Users
      summary: Get a user by ID
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: User found
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: User not found
          content:
            application/hal+json:
              schema:
                type: string
    put:
      tags:
      - Users
      summary: Update an existing user
      operationId: updateUSer
      parameters:
      - name: id
        in: query
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: User updated successfully
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "400":
          description: Invalid input
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: User not found
          content:
            application/hal+json:
              schema:
                type: string
    delete:
      tags:
      - Users
      summary: Delete a user by ID
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "204":
          description: User deleted successfully
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: User not found
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/accommodations/{id}:
    get:
      tags:
      - Accommodations
      summary: Get accommodation by ID
      operationId: getAccommodationById
      parameters:
      - name: id
        in: path
        description: Accommodation ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Accommodation found
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Accommodation not found
          content:
            application/hal+json:
              schema:
                type: string
    put:
      tags:
      - Accommodations
      summary: Update an existing accommodation
      operationId: updateAccommodation
      parameters:
      - name: id
        in: path
        description: Accommodation ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      - name: name
        in: query
        description: Updated name
        required: true
        schema:
          type: string
        example: Luxury Beach House
      - name: price
        in: query
        description: Updated price
        required: true
        schema:
          type: number
          format: double
        example: 150
      - name: maxGuests
        in: query
        description: Updated max guests
        required: true
        schema:
          type: integer
          format: int32
        example: 6
      responses:
        "400":
          description: Invalid data
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Accommodation updated successfully
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Accommodation not found
          content:
            application/hal+json:
              schema:
                type: string
    delete:
      tags:
      - Accommodations
      summary: Delete an accommodation by ID
      operationId: deleteAccommodation
      parameters:
      - name: id
        in: path
        description: Accommodation ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: Accommodation deleted successfully
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Accommodation not found
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/users/register:
    post:
      tags:
      - Users
      summary: Register a new user
      operationId: registerUser
      parameters:
      - name: username
        in: query
        description: Username
        required: true
        schema:
          type: string
        example: johndoe
      - name: email
        in: query
        description: Email
        required: true
        schema:
          type: string
        example: johndoe@example.com
      - name: password
        in: query
        description: Password
        required: true
        schema:
          type: string
        example: 123456
      responses:
        "400":
          description: Invalid registration data
          content:
            application/hal+json:
              schema:
                type: string
        "201":
          description: User registered successfully
          content:
            application/hal+json:
              schema:
                type: string
        "409":
          description: Email already in use
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/reviews/add:
    post:
      tags:
      - Reviews
      summary: Add a new review
      operationId: addReview
      parameters:
      - name: accommodationId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: rate
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: comment
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid input (e.g. rating out of range or missing fields)
          content:
            application/hal+json:
              schema:
                type: string
        "401":
          description: Unauthorized (user must be logged in)
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "201":
          description: Review created successfully
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/passwords/reset/request:
    post:
      tags:
      - Passwords
      summary: Request password reset
      description: Sends an email with reset instructions
      operationId: requestPasswordReset
      parameters:
      - name: email
        in: query
        description: User email
        required: true
        schema:
          type: string
        example: user@example.com
      responses:
        "400":
          description: Invalid email format
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Email not registered
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Password reset instructions sent to email
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/passwords/reset/confirm:
    post:
      tags:
      - Passwords
      summary: Reset password with token
      description: Resets password using a valid recovery token
      operationId: resetPassword
      parameters:
      - name: token
        in: query
        description: Recovery token
        required: true
        schema:
          type: string
        example: RESET_TOKEN_123456
      - name: newPassword
        in: query
        description: New password
        required: true
        schema:
          type: string
        example: newPass456
      responses:
        "200":
          description: Password reset successfully
          content:
            application/hal+json:
              schema:
                type: string
        "401":
          description: Expired or unauthorized token
          content:
            application/hal+json:
              schema:
                type: string
        "400":
          description: Invalid token or password format
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/passwords/change:
    post:
      tags:
      - Passwords
      summary: Change password
      description: Allows authenticated users to change their password
      operationId: changePassword
      parameters:
      - name: oldPassword
        in: query
        description: Old password
        required: true
        schema:
          type: string
        example: oldPass123
      - name: newPassword
        in: query
        description: New password
        required: true
        schema:
          type: string
        example: newPass456
      responses:
        "401":
          description: User not authenticated
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Password changed successfully
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/bookings:
    post:
      tags:
      - Bookings
      summary: Create a new booking
      description: "Creates a booking for a user, with check-in, check-out and number\
        \ of guests"
      operationId: createBooking
      parameters:
      - name: userId
        in: query
        description: User ID of the booking
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      - name: dateCheckIn
        in: query
        description: Check-in date (yyyy-MM-dd)
        required: true
        schema:
          type: string
          format: date-time
        example: 2025-09-12
      - name: dateCheckOut
        in: query
        description: Check-out date (yyyy-MM-dd)
        required: true
        schema:
          type: string
          format: date-time
        example: 2025-09-15
      - name: guestsNumber
        in: query
        description: Number of guests
        required: true
        schema:
          type: integer
          format: int32
        example: 2
      responses:
        "201":
          description: Booking created successfully
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "400":
          description: Invalid booking data
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/auth/refresh:
    post:
      tags:
      - Auth
      summary: Refresh access token
      description: Generates a new access token using a valid refresh token
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: query
        description: Refresh token
        required: true
        schema:
          type: string
        example: REFRESH_TOKEN_EXAMPLE
      responses:
        "401":
          description: Invalid or expired refresh token
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Token refreshed successfully
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/auth/logout:
    post:
      tags:
      - Auth
      summary: User logout
      description: Invalidates the current user session or JWT token
      operationId: logoutUser
      responses:
        "401":
          description: User not authenticated
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Logout successful
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/auth/login:
    post:
      tags:
      - Auth
      summary: User login
      description: "Authenticates user with email and password, returns access token"
      operationId: loginUser
      parameters:
      - name: email
        in: query
        description: Email
        required: true
        schema:
          type: string
        example: johndoe@example.com
      - name: password
        in: query
        description: Password
        required: true
        schema:
          type: string
        example: 123456
      responses:
        "400":
          description: Invalid login data
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: "Login successful, token returned"
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "401":
          description: Invalid credentials
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/accommodations:
    get:
      tags:
      - Accommodations
      summary: Get all accommodations
      operationId: getAllAccommodations
      responses:
        "200":
          description: List of accommodations returned
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
    post:
      tags:
      - Accommodations
      summary: Add a new accommodation
      operationId: addAccommodation
      parameters:
      - name: name
        in: query
        description: Accommodation name
        required: true
        schema:
          type: string
        example: Beach House
      - name: city
        in: query
        description: City where the accommodation is located
        required: true
        schema:
          type: string
        example: Cartagena
      - name: price
        in: query
        description: Price per night
        required: true
        schema:
          type: number
          format: double
        example: 120
      - name: maxGuests
        in: query
        description: Maximum number of guests
        required: true
        schema:
          type: integer
          format: int32
        example: 4
      responses:
        "201":
          description: Accommodation created successfully
          content:
            application/hal+json:
              schema:
                type: string
        "400":
          description: Invalid data
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/users:
    get:
      tags:
      - Users
      summary: Get all users
      operationId: getAllUsers
      responses:
        "200":
          description: List of users returned (may be empty)
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/reviews/accommodation/{id}:
    get:
      tags:
      - Reviews
      summary: Get all reviews for an accommodation
      operationId: getReviewsByAccommodation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: List of reviews returned (may be empty)
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Accommodation not found
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/reviews/accommodation/{id}/average:
    get:
      tags:
      - Reviews
      summary: Get average rating for an accommodation
      operationId: getAverageRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Average rating returned (0.0 if no reviews)
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Accommodation not found
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/bookings/{id}:
    get:
      tags:
      - Bookings
      summary: Get a booking by ID
      operationId: getBookingById
      parameters:
      - name: id
        in: path
        description: Booking ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Booking found
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: Booking not found
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/bookings/user/{userId}:
    get:
      tags:
      - Bookings
      summary: Get all bookings by user ID
      operationId: getAllBookingsByUserId
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: Bookings found
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: No bookings found for this user
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/bookings/accommodation/{accommodationId}:
    get:
      tags:
      - Bookings
      summary: Get all bookings by accommodation ID
      operationId: getAllBookingsByAccommodationId
      parameters:
      - name: accommodationId
        in: path
        description: Accommodation ID
        required: true
        schema:
          type: integer
          format: int64
        example: 10
      responses:
        "200":
          description: Bookings found
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: No bookings found for this accommodation
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/auth/me:
    get:
      tags:
      - Auth
      summary: Get current user
      description: Returns details of the authenticated user
      operationId: getCurrentUser
      responses:
        "401":
          description: User not authenticated
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: User data returned
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/accommodations/search:
    get:
      tags:
      - Accommodations
      summary: Search accommodations by name or city
      operationId: searchAccommodations
      parameters:
      - name: name
        in: query
        description: Accommodation name
        required: false
        schema:
          type: string
        example: Beach
      - name: city
        in: query
        description: City
        required: false
        schema:
          type: string
        example: Cartagena
      responses:
        "404":
          description: No accommodations found
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
        "200":
          description: Search results returned
          content:
            application/hal+json:
              schema:
                type: string
  /api/v1/accommodations/filter:
    get:
      tags:
      - Accommodations
      summary: Filter accommodations by price and number of guests
      operationId: filterAccommodations
      parameters:
      - name: minPrice
        in: query
        description: Minimum price
        required: false
        schema:
          type: number
          format: double
        example: 50
      - name: maxPrice
        in: query
        description: Maximum price
        required: false
        schema:
          type: number
          format: double
        example: 200
      - name: minGuests
        in: query
        description: Minimum guests
        required: false
        schema:
          type: integer
          format: int32
        example: 2
      - name: maxGuests
        in: query
        description: Maximum guests
        required: false
        schema:
          type: integer
          format: int32
        example: 6
      responses:
        "200":
          description: Filtered results returned
          content:
            application/hal+json:
              schema:
                type: string
        "404":
          description: No accommodations match the filter
          content:
            application/hal+json:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/hal+json:
              schema:
                type: string
components:
  schemas: {}
  securitySchemes:
    Bearer Authentication:
      type: http
      description: Ingresa tu token JWT
      scheme: bearer
      bearerFormat: JWT
